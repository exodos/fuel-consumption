/**
 * This file was generated by Nexus Schema
 * Do not make changes to this file directly
 */


import type { Context } from "./../graphql/context"
import type { core } from "nexus"
declare global {
  interface NexusGenCustomInputMethods<TypeName extends string> {
    /**
     * A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
     */
    date<FieldName extends string>(fieldName: FieldName, opts?: core.CommonInputFieldConfig<TypeName, FieldName>): void // "DateTime";
  }
}
declare global {
  interface NexusGenCustomOutputMethods<TypeName extends string> {
    /**
     * A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
     */
    date<FieldName extends string>(fieldName: FieldName, ...opts: core.ScalarOutSpread<TypeName, FieldName>): void // "DateTime";
  }
}


declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
  ConsumptionOrderByInput: { // input type
    createdAt?: NexusGenEnums['Sort'] | null; // Sort
    updatedAt?: NexusGenEnums['Sort'] | null; // Sort
  }
}

export interface NexusGenEnums {
  Sort: "asc" | "desc"
  fuel_type_enum: "Benzene" | "Diesel"
  plate_region_enum: "AA" | "AM" | "HR" | "OR" | "SM" | "TG"
}

export interface NexusGenScalars {
  String: string
  Int: number
  Float: number
  Boolean: boolean
  ID: string
  DateTime: any
}

export interface NexusGenObjects {
  Consumption: { // root type
    amount?: number | null; // Float
    companyId?: string | null; // String
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    creditAccountNumber?: string | null; // String
    debitAccountNumber?: string | null; // String
    firstName?: string | null; // String
    fuelInLiters?: number | null; // Float
    fuelStationId?: string | null; // String
    fuelStationName?: string | null; // String
    fuelStationRegion?: string | null; // String
    fuelStationWoreda?: string | null; // String
    fuelStationZone?: string | null; // String
    fuelType?: NexusGenEnums['fuel_type_enum'] | null; // fuel_type_enum
    id?: number | null; // Int
    lastName?: string | null; // String
    middleName?: string | null; // String
    mobileNumber?: string | null; // String
    paidAt?: NexusGenScalars['DateTime'] | null; // DateTime
    plateCode?: number | null; // Int
    plateNumber?: string | null; // String
    plateRegion?: NexusGenEnums['plate_region_enum'] | null; // plate_region_enum
    sourceId?: number | null; // Int
    transactionNumber?: string | null; // String
    updatedAt?: NexusGenScalars['DateTime'] | null; // DateTime
  }
  DailyConsumption: { // root type
    amount?: number | null; // Float
    day?: NexusGenScalars['DateTime'] | null; // DateTime
    fuelInLiters?: number | null; // Float
    fuelStationId?: string | null; // String
    fuelType?: NexusGenEnums['fuel_type_enum'] | null; // fuel_type_enum
    sourceId?: number | null; // Int
  }
  FeedConsumption: { // root type
    consumptions: NexusGenRootTypes['Consumption'][]; // [Consumption!]!
    maxPage?: number | null; // Int
    totalConsumption: number; // Int!
  }
  MonthlyConsumption: { // root type
    amount?: number | null; // Float
    fuelInLiters?: number | null; // Float
    fuelStationId?: string | null; // String
    fuelType?: NexusGenEnums['fuel_type_enum'] | null; // fuel_type_enum
    month?: NexusGenScalars['DateTime'] | null; // DateTime
    sourceId?: number | null; // Int
  }
  Query: {};
  WeeklyConsumption: { // root type
    amount?: number | null; // Float
    fuelInLiters?: number | null; // Float
    fuelStationId?: string | null; // String
    fuelType?: NexusGenEnums['fuel_type_enum'] | null; // fuel_type_enum
    sourceId?: number | null; // Int
    week?: NexusGenScalars['DateTime'] | null; // DateTime
  }
}

export interface NexusGenInterfaces {
}

export interface NexusGenUnions {
}

export type NexusGenRootTypes = NexusGenObjects

export type NexusGenAllTypes = NexusGenRootTypes & NexusGenScalars & NexusGenEnums

export interface NexusGenFieldTypes {
  Consumption: { // field return type
    amount: number | null; // Float
    companyId: string | null; // String
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    creditAccountNumber: string | null; // String
    debitAccountNumber: string | null; // String
    firstName: string | null; // String
    fuelInLiters: number | null; // Float
    fuelStationId: string | null; // String
    fuelStationName: string | null; // String
    fuelStationRegion: string | null; // String
    fuelStationWoreda: string | null; // String
    fuelStationZone: string | null; // String
    fuelType: NexusGenEnums['fuel_type_enum'] | null; // fuel_type_enum
    id: number | null; // Int
    lastName: string | null; // String
    middleName: string | null; // String
    mobileNumber: string | null; // String
    paidAt: NexusGenScalars['DateTime'] | null; // DateTime
    plateCode: number | null; // Int
    plateNumber: string | null; // String
    plateRegion: NexusGenEnums['plate_region_enum'] | null; // plate_region_enum
    sourceId: number | null; // Int
    transactionNumber: string | null; // String
    updatedAt: NexusGenScalars['DateTime'] | null; // DateTime
  }
  DailyConsumption: { // field return type
    amount: number | null; // Float
    day: NexusGenScalars['DateTime'] | null; // DateTime
    fuelInLiters: number | null; // Float
    fuelStationId: string | null; // String
    fuelType: NexusGenEnums['fuel_type_enum'] | null; // fuel_type_enum
    sourceId: number | null; // Int
  }
  FeedConsumption: { // field return type
    consumptions: NexusGenRootTypes['Consumption'][]; // [Consumption!]!
    maxPage: number | null; // Int
    totalConsumption: number; // Int!
  }
  MonthlyConsumption: { // field return type
    amount: number | null; // Float
    fuelInLiters: number | null; // Float
    fuelStationId: string | null; // String
    fuelType: NexusGenEnums['fuel_type_enum'] | null; // fuel_type_enum
    month: NexusGenScalars['DateTime'] | null; // DateTime
    sourceId: number | null; // Int
  }
  Query: { // field return type
    consumptionByPlateNumber: NexusGenRootTypes['Consumption'] | null; // Consumption
    feedConsumption: NexusGenRootTypes['FeedConsumption']; // FeedConsumption!
  }
  WeeklyConsumption: { // field return type
    amount: number | null; // Float
    fuelInLiters: number | null; // Float
    fuelStationId: string | null; // String
    fuelType: NexusGenEnums['fuel_type_enum'] | null; // fuel_type_enum
    sourceId: number | null; // Int
    week: NexusGenScalars['DateTime'] | null; // DateTime
  }
}

export interface NexusGenFieldTypeNames {
  Consumption: { // field return type name
    amount: 'Float'
    companyId: 'String'
    createdAt: 'DateTime'
    creditAccountNumber: 'String'
    debitAccountNumber: 'String'
    firstName: 'String'
    fuelInLiters: 'Float'
    fuelStationId: 'String'
    fuelStationName: 'String'
    fuelStationRegion: 'String'
    fuelStationWoreda: 'String'
    fuelStationZone: 'String'
    fuelType: 'fuel_type_enum'
    id: 'Int'
    lastName: 'String'
    middleName: 'String'
    mobileNumber: 'String'
    paidAt: 'DateTime'
    plateCode: 'Int'
    plateNumber: 'String'
    plateRegion: 'plate_region_enum'
    sourceId: 'Int'
    transactionNumber: 'String'
    updatedAt: 'DateTime'
  }
  DailyConsumption: { // field return type name
    amount: 'Float'
    day: 'DateTime'
    fuelInLiters: 'Float'
    fuelStationId: 'String'
    fuelType: 'fuel_type_enum'
    sourceId: 'Int'
  }
  FeedConsumption: { // field return type name
    consumptions: 'Consumption'
    maxPage: 'Int'
    totalConsumption: 'Int'
  }
  MonthlyConsumption: { // field return type name
    amount: 'Float'
    fuelInLiters: 'Float'
    fuelStationId: 'String'
    fuelType: 'fuel_type_enum'
    month: 'DateTime'
    sourceId: 'Int'
  }
  Query: { // field return type name
    consumptionByPlateNumber: 'Consumption'
    feedConsumption: 'FeedConsumption'
  }
  WeeklyConsumption: { // field return type name
    amount: 'Float'
    fuelInLiters: 'Float'
    fuelStationId: 'String'
    fuelType: 'fuel_type_enum'
    sourceId: 'Int'
    week: 'DateTime'
  }
}

export interface NexusGenArgTypes {
  Query: {
    consumptionByPlateNumber: { // args
      plateCode: string; // String!
      plateNumber: string; // String!
      plateRegion: string; // String!
    }
    feedConsumption: { // args
      filter?: string | null; // String
      orderBy?: NexusGenInputs['ConsumptionOrderByInput'][] | null; // [ConsumptionOrderByInput!]
      skip?: number | null; // Int
      take?: number | null; // Int
    }
  }
}

export interface NexusGenAbstractTypeMembers {
}

export interface NexusGenTypeInterfaces {
}

export type NexusGenObjectNames = keyof NexusGenObjects;

export type NexusGenInputNames = keyof NexusGenInputs;

export type NexusGenEnumNames = keyof NexusGenEnums;

export type NexusGenInterfaceNames = never;

export type NexusGenScalarNames = keyof NexusGenScalars;

export type NexusGenUnionNames = never;

export type NexusGenObjectsUsingAbstractStrategyIsTypeOf = never;

export type NexusGenAbstractsUsingStrategyResolveType = never;

export type NexusGenFeaturesConfig = {
  abstractTypeStrategies: {
    isTypeOf: false
    resolveType: true
    __typename: false
  }
}

export interface NexusGenTypes {
  context: Context;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  inputTypeShapes: NexusGenInputs & NexusGenEnums & NexusGenScalars;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  fieldTypeNames: NexusGenFieldTypeNames;
  allTypes: NexusGenAllTypes;
  typeInterfaces: NexusGenTypeInterfaces;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractTypeMembers: NexusGenAbstractTypeMembers;
  objectsUsingAbstractStrategyIsTypeOf: NexusGenObjectsUsingAbstractStrategyIsTypeOf;
  abstractsUsingStrategyResolveType: NexusGenAbstractsUsingStrategyResolveType;
  features: NexusGenFeaturesConfig;
}


declare global {
  interface NexusGenPluginTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginInputTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginInputFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginSchemaConfig {
  }
  interface NexusGenPluginArgConfig {
  }
}