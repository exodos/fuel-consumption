import { faker } from "@faker-js/faker";
import { PrismaClient } from "@prisma/client";

const prisma = new PrismaClient();

async function main() {
  // Array.from({ length: 2000 }).forEach(async () => {
  //   let dailyData = await prisma.dailyConsumption.create({
  //     data: {
  //       amount: faker.datatype.number({ min: 2000, max: 10000 }),
  //       fuelInLiters: faker.datatype.number({ min: 2000, max: 10000 }),
  //       fuelType: faker.helpers.arrayElement(["Diesel", "Gasoline"]),
  //       fuelStationId: faker.helpers.arrayElement([
  //         "15",
  //         "16",
  //         "17",
  //         "18",
  //         "19",
  //         "20",
  //         "21",
  //         "22",
  //         "23",
  //         "24",
  //         "25",
  //         "26",
  //         "27",
  //         "28",
  //         "29",
  //         "30",
  //       ]),
  //       day: faker.date.between(
  //         "2023-03-30T16:17:14.666Z",
  //         "2023-04-06T16:17:14.666Z"
  //       ),
  //       sourceId: faker.helpers.arrayElement([
  //         "31",
  //         "32",
  //         "33",
  //         "34",
  //         "35",
  //         "36",
  //         "37",
  //         "38",
  //         "39",
  //         "40",
  //         "41",
  //         "42",
  //         "43",
  //         "44",
  //         "45",
  //         "46",
  //       ]),
  //       fuelStationRegion: faker.helpers.arrayElement([
  //         "1",
  //         "3",
  //         "4",
  //         "5",
  //         "6",
  //         "7",
  //         "8",
  //         "9",
  //         "10",
  //         "11",
  //         "12",
  //         "2003",
  //       ]),
  //       companyId: faker.helpers.arrayElement([
  //         "1",
  //         "2",
  //         "3",
  //         "4",
  //         "5",
  //         "6",
  //         "7",
  //         "8",
  //         "9",
  //         "10",
  //         "11",
  //         "12",
  //         "13",
  //         "14",
  //         "15",
  //         "16",
  //         "17",
  //         "18",
  //         "19",
  //         "20",
  //         "21",
  //         "22",
  //         "23",
  //         "24",
  //         "25",
  //         "26",
  //         "27",
  //         "28",
  //         "29",
  //         "30",
  //         "31",
  //         "32",
  //         "33",
  //         "34",
  //         "35",
  //         "36",
  //         "37",
  //         "38",
  //         "39",
  //         "40",
  //       ]),
  //       transactionCount: faker.helpers.arrayElement([
  //         300, 350, 400, 450, 500, 550, 600, 650, 700, 750, 800, 850, 900, 950,
  //         100,
  //       ]),
  //     },
  //   });
  //   console.log(dailyData);
  //   let weeklyData = await prisma.weeklyConsumption.create({
  //     data: {
  //       amount: faker.datatype.number({ min: 2000, max: 10000 }),
  //       fuelInLiters: faker.datatype.number({ min: 2000, max: 10000 }),
  //       fuelType: faker.helpers.arrayElement(["Diesel", "Gasoline"]),
  //       fuelStationId: faker.helpers.arrayElement([
  //         "15",
  //         "16",
  //         "17",
  //         "18",
  //         "19",
  //         "20",
  //         "21",
  //         "22",
  //         "23",
  //         "24",
  //         "25",
  //         "26",
  //         "27",
  //         "28",
  //         "29",
  //         "30",
  //       ]),
  //       week: faker.date.between(
  //         "2022-10-01T16:17:14.666Z",
  //         "2023-04-06T16:17:14.666Z"
  //       ),
  //       sourceId: "1",
  //       // sourceId: faker.helpers.arrayElement([
  //       //   "31",
  //       //   "32",
  //       //   "33",
  //       //   "34",
  //       //   "35",
  //       //   "36",
  //       //   "37",
  //       //   "38",
  //       //   "39",
  //       //   "40",
  //       //   "41",
  //       //   "42",
  //       //   "43",
  //       //   "44",
  //       //   "45",
  //       //   "46",
  //       // ]),
  //       fuelStationRegion: faker.helpers.arrayElement([
  //         "1",
  //         "3",
  //         "4",
  //         "5",
  //         "6",
  //         "7",
  //         "8",
  //         "9",
  //         "10",
  //         "11",
  //         "12",
  //         "2003",
  //       ]),
  //       companyId: faker.helpers.arrayElement([
  //         "1",
  //         "2",
  //         "3",
  //         "4",
  //         "5",
  //         "6",
  //         "7",
  //         "8",
  //         "9",
  //         "10",
  //         "11",
  //         "12",
  //         "13",
  //         "14",
  //         "15",
  //         "16",
  //         "17",
  //         "18",
  //         "19",
  //         "20",
  //         "21",
  //         "22",
  //         "23",
  //         "24",
  //         "25",
  //         "26",
  //         "27",
  //         "28",
  //         "29",
  //         "30",
  //         "31",
  //         "32",
  //         "33",
  //         "34",
  //         "35",
  //         "36",
  //         "37",
  //         "38",
  //         "39",
  //         "40",
  //       ]),
  //       transactionCount: faker.helpers.arrayElement([
  //         1300, 1350, 1400, 1450, 1500, 1550, 1600, 1650, 1700, 1750, 1800,
  //         1850, 1900, 1950, 2000,
  //       ]),
  //     },
  //   });
  //   console.log(weeklyData);
  //   let monthlyData = await prisma.monthlyConsumption.create({
  //     data: {
  //       amount: faker.datatype.number({ min: 2000, max: 10000 }),
  //       fuelInLiters: faker.datatype.number({ min: 2000, max: 10000 }),
  //       fuelType: faker.helpers.arrayElement(["Diesel", "Gasoline"]),
  //       fuelStationId: faker.helpers.arrayElement([
  //         "15",
  //         "16",
  //         "17",
  //         "18",
  //         "19",
  //         "20",
  //         "21",
  //         "22",
  //         "23",
  //         "24",
  //         "25",
  //         "26",
  //         "27",
  //         "28",
  //         "29",
  //         "30",
  //       ]),
  //       month: faker.date.between(
  //         "2022-10-01T16:17:14.666Z",
  //         "2023-04-06T16:17:14.666Z"
  //       ),
  //       sourceId: "1",
  //       // sourceId: faker.helpers.arrayElement([
  //       //   "31",
  //       //   "32",
  //       //   "33",
  //       //   "34",
  //       //   "35",
  //       //   "36",
  //       //   "37",
  //       //   "38",
  //       //   "39",
  //       //   "40",
  //       //   "41",
  //       //   "42",
  //       //   "43",
  //       //   "44",
  //       //   "45",
  //       //   "46",
  //       // ]),
  //       fuelStationRegion: faker.helpers.arrayElement([
  //         "1",
  //         "3",
  //         "4",
  //         "5",
  //         "6",
  //         "7",
  //         "8",
  //         "9",
  //         "10",
  //         "11",
  //         "12",
  //         "2003",
  //       ]),
  //       companyId: faker.helpers.arrayElement([
  //         "1",
  //         "2",
  //         "3",
  //         "4",
  //         "5",
  //         "6",
  //         "7",
  //         "8",
  //         "9",
  //         "10",
  //         "11",
  //         "12",
  //         "13",
  //         "14",
  //         "15",
  //         "16",
  //         "17",
  //         "18",
  //         "19",
  //         "20",
  //         "21",
  //         "22",
  //         "23",
  //         "24",
  //         "25",
  //         "26",
  //         "27",
  //         "28",
  //         "29",
  //         "30",
  //         "31",
  //         "32",
  //         "33",
  //         "34",
  //         "35",
  //         "36",
  //         "37",
  //         "38",
  //         "39",
  //         "40",
  //       ]),
  //       transactionCount: faker.helpers.arrayElement([
  //         4300, 4350, 4400, 4450, 4500, 4550, 4600, 4650, 4700, 4750, 4800,
  //         4850, 4900, 4950, 5000,
  //       ]),
  //     },
  //   });
  //   console.log(monthlyData);
  //   const consumptionData = await prisma.consumption.create({
  //     data: {
  //       transactionNumber: faker.finance.bic(),
  //       amount: parseFloat(faker.finance.amount(1200, 20000)),
  //       fuelInLiters: faker.datatype.number({ min: 2000, max: 10000 }),
  //       fuelType: faker.helpers.arrayElement(["Diesel", "Gasoline"]),
  //       plateCode: faker.helpers.arrayElement([
  //         "1",
  //         "2",
  //         "3",
  //         "4",
  //         "5",
  //         "UN",
  //         "AO",
  //         "CD",
  //       ]),
  //       plateRegion: faker.helpers.arrayElement([
  //         "AA",
  //         "SP",
  //         "SM",
  //         "TG",
  //         "SD",
  //         "AF",
  //         "AM",
  //         "BG",
  //         "DR",
  //         "GM",
  //         "HR",
  //         "OR",
  //       ]),
  //       plateNumber: faker.vehicle.vrm(),
  //       paidAt: faker.date.between(
  //         "2022-11-01T16:17:14.666Z",
  //         "2023-04-04T16:17:14.666Z"
  //       ),
  //       debitAccountNumber: faker.finance.account(),
  //       creditAccountNumber: faker.finance.account(),
  //       fuelStationId: faker.helpers.arrayElement([
  //         "1",
  //         "2",
  //         "3",
  //         "4",
  //         "5",
  //         "6",
  //         "7",
  //         "8",
  //         "9",
  //         "10",
  //         "11",
  //         "12",
  //         "13",
  //         "14",
  //         "15",
  //         "16",
  //         "17",
  //         "18",
  //         "19",
  //         "20",
  //         "21",
  //         "22",
  //         "23",
  //         "24",
  //         "25",
  //         "26",
  //         "27",
  //         "28",
  //         "29",
  //         "30",
  //         "31",
  //         "32",
  //         "33",
  //         "34",
  //         "35",
  //         "36",
  //         "37",
  //         "38",
  //         "39",
  //         "40",
  //       ]),
  //       fuelStationRegion: faker.helpers.arrayElement([
  //         "1",
  //         "3",
  //         "4",
  //         "5",
  //         "6",
  //         "7",
  //         "8",
  //         "9",
  //         "10",
  //         "11",
  //         "12",
  //         "2003",
  //       ]),
  //       fuelStationName: faker.company.name(),
  //       fuelStationZone: faker.address.city(),
  //       fuelStationWoreda: faker.address.state(),
  //       fuelStationKebele: faker.address.streetAddress(),
  //       lastKiloMeter: faker.datatype.number({ min: 2000, max: 10000 }),
  //       reasonTypeName: faker.helpers.arrayElement([
  //         "Fuel Payment With Subsidy",
  //         "Fuel Payment With Subsidy_Public Transport",
  //         "Fuel Payment Without Subsidy",
  //         "Fuel Payment Without Subsidy_Public Transport",
  //       ]),
  //       reasonTypeCode: faker.helpers.arrayElement([
  //         "844",
  //         "875",
  //         "845",
  //         "876",
  //       ]),
  //       firstName: faker.name.firstName(),
  //       middleName: faker.name.middleName(),
  //       lastName: faker.name.lastName(),
  //       mobileNumber: faker.phone.number("+251 9## ######"),
  //       sourceId: "1",
  //       companyId: faker.helpers.arrayElement([
  //         "1",
  //         "2",
  //         "3",
  //         "4",
  //         "5",
  //         "6",
  //         "7",
  //         "8",
  //         "9",
  //         "10",
  //         "11",
  //         "12",
  //         "13",
  //         "14",
  //         "15",
  //         "16",
  //         "17",
  //         "18",
  //         "19",
  //         "20",
  //         "21",
  //         "22",
  //         "23",
  //         "24",
  //         "25",
  //         "26",
  //         "27",
  //         "28",
  //         "29",
  //         "30",
  //         "31",
  //         "32",
  //         "33",
  //         "34",
  //         "35",
  //         "36",
  //         "37",
  //         "38",
  //         "39",
  //         "40",
  //       ]),
  //     },
  //   });
  //   console.log(consumptionData);
  // });
}

main()
  .then(async () => {
    await prisma.$disconnect();
  })
  .catch(async (e) => {
    console.error(e);

    await prisma.$disconnect();

    process.exit(1);
  });
